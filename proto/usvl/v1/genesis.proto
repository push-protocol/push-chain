syntax = "proto3";
package usvl.v1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";

option go_package = "github.com/push-protocol/push-chain/x/usvl/types";

// GenesisState defines the module genesis state
message GenesisState {
  // Params defines all the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];

  // ChainConfigs contains the list of chain configurations
  repeated ChainConfig chain_configs = 2 [(gogoproto.nullable) = false];
}

// Params defines the set of module parameters.
message Params {
  option (amino.name) = "usvl/params";
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  bool some_value = 2;
}

// NetworkType defines the type of network for a chain
enum NetworkType {
  option (gogoproto.goproto_enum_prefix) = false;
  
  // NETWORK_TYPE_UNSPECIFIED is the default value
  NETWORK_TYPE_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "NetworkTypeUnspecified"];
  // NETWORK_TYPE_MAINNET represents a production network
  NETWORK_TYPE_MAINNET = 1 [(gogoproto.enumvalue_customname) = "NetworkTypeMainnet"];
  // NETWORK_TYPE_TESTNET represents a test network
  NETWORK_TYPE_TESTNET = 2 [(gogoproto.enumvalue_customname) = "NetworkTypeTestnet"];
  // NETWORK_TYPE_DEVNET represents a development network
  NETWORK_TYPE_DEVNET = 3 [(gogoproto.enumvalue_customname) = "NetworkTypeDevnet"];
  // NETWORK_TYPE_LOCALNET represents a local development network
  NETWORK_TYPE_LOCALNET = 4 [(gogoproto.enumvalue_customname) = "NetworkTypeLocalnet"];
}

// VmType defines the virtual machine type for a chain
enum VmType {
  option (gogoproto.goproto_enum_prefix) = false;
  
  // VM_TYPE_UNSPECIFIED is the default value
  VM_TYPE_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "VmTypeUnspecified"];
  // VM_TYPE_EVM represents Ethereum Virtual Machine
  VM_TYPE_EVM = 1 [(gogoproto.enumvalue_customname) = "VmTypeEvm"];
  // VM_TYPE_SVM represents Solana Virtual Machine
  VM_TYPE_SVM = 2 [(gogoproto.enumvalue_customname) = "VmTypeSvm"];
  // VM_TYPE_WASM represents WebAssembly Virtual Machine
  VM_TYPE_WASM = 3 [(gogoproto.enumvalue_customname) = "VmTypeWasm"];
}

// ChainConfig contains configuration for an external chain
message ChainConfig {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  // chain_id is the unique identifier for the chain
  string chain_id = 1;

  // chain_name is a human-readable name for the chain
  string chain_name = 2;

  // caip_prefix is the CAIP-2 identifier for the chain, e.g., "eip155:11155111"
  string caip_prefix = 3;

  // locker_contract_address is the address of the fee locker contract on the external chain
  string locker_contract_address = 4;

  // usdc_address is the address of the USDC token contract on the external chain
  string usdc_address = 5;

  // public_rpc_url is the default RPC URL for the chain
  string public_rpc_url = 6;
  
  // network_type identifies the type of network (mainnet, testnet, localnet, devnet)
  NetworkType network_type = 7;
  
  // vm_type identifies the virtual machine type (EVM, SVM, etc.)
  VmType vm_type = 8;
}