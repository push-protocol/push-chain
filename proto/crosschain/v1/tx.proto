syntax = "proto3";
package crosschain.v1;

import "cosmos/msg/v1/msg.proto";
import "crosschain/v1/params.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/rollchains/pchain/x/crosschain/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the parameters.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // SetFactoryAddress defines a admin operation for setting the factory address.
  // rpc SetFactoryAddress(MsgSetFactoryAddress) returns (MsgSetFactoryAddressResponse);

  // SetVerifierPrecompile defines a admin operation for setting the verifier precompile.
  // rpc SetVerifierPrecompile(MsgSetVerifierPrecompile) returns (MsgSetVerifierPrecompileResponse);

  // UpdateAdminParams defines a admin operation for updating the admin parameters.
  rpc UpdateAdminParams(MsgUpdateAdminParams) returns (MsgUpdateAdminParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

// // MsgFactoryAddress defines the Msg/FactoryAddress request type.
// message MsgSetFactoryAddress {
//   option (cosmos.msg.v1.signer) = "admin";

//   // admin is the account that is authorized to set the factory address.
//   string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

//   // factory_address is the address of the factory contract for smart account deployments.
//   string factory_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
// }

// message MsgSetFactoryAddressResponse {}

// // MsgVerifierPrecompile defines the Msg/VerifierPrecompile request type.
// message MsgSetVerifierPrecompile {
//   option (cosmos.msg.v1.signer) = "admin";

//   // admin is the account that is authorized to set the verifier precompile.
//   string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

//   // verifier_precompile is the address of the verifier precompile for smart account deployments.
//   string verifier_precompile = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
// }

// message MsgSetVerifierPrecompileResponse {}

// MsgUpdateAdminParams is the message used by the admin to update AdminParams.
message MsgUpdateAdminParams {
  option (cosmos.msg.v1.signer) = "admin";

  // admin is the address authorized to update admin parameters.
  string admin = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // admin_params defines the admin-only parameters to update.
  //
  // NOTE: All fields must be supplied.
  AdminParams admin_params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateAdminParamsResponse defines the response for MsgUpdateAdminParams.
message MsgUpdateAdminParamsResponse {}
