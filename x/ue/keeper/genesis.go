package keeper

import (
	"context"
	"math/big"

	sdk "github.com/cosmos/cosmos-sdk/types"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"

	"github.com/evmos/os/x/evm/statedb"
	"github.com/rollchains/pchain/x/ue/types"
)

const (
	FactoryAddressHex = "0x00000000000000000000000000000000000000eA"
	OwnerAddressHex   = "0x778D3206374f8AC265728E18E3fE2Ae6b93E4ce4"
)

var FactoryRuntimeBytecode = common.FromHex("0x608060405234801561000f575f80fd5b50600436106100c4575f3560e01c8063a5dafb441161007d578063ea5e7fa411610058578063ea5e7fa4146101c7578063f2fde38b146101fc578063fe9354bf1461020f575f80fd5b8063a5dafb4414610160578063a761641914610173578063c3acb84d14610186575f80fd5b8063715018a6116100ad578063715018a6146101265780638da5cb5b14610130578063982917af1461014d575f80fd5b80630430b7b1146100c85780632b4780e5146100ee575b5f80fd5b6100db6100d6366004610c90565b610222565b6040519081526020015b60405180910390f35b6101016100fc366004610c90565b610251565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e5565b61012e61055f565b005b5f5473ffffffffffffffffffffffffffffffffffffffff16610101565b61012e61015b366004610d86565b610572565b61012e61016e366004610e44565b6106a5565b610101610181366004610f00565b61073c565b610101610194366004610f19565b805160208183018101805160028252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b6101016101d5366004610f4b565b60016020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61012e61020a366004610f62565b61077e565b61010161021d366004610c90565b6107e1565b5f8160405160200161023491906110a8565b604051602081830303815290604052805190602001209050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff166002836040015160405161027d91906110ba565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16146102da576040517f69783db700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102e6600560016110d5565b826060015160058111156102fc576102fc610fe6565b10610333576040517f5ab75e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f8460600151600581111561034d5761034d610fe6565b815260208101919091526040015f205473ffffffffffffffffffffffffffffffffffffffff16905080610407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4e6f20696d706c656d656e746174696f6e20666f72207468697320564d20747960448201527f706500000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5f61041184610222565b90505f61043473ffffffffffffffffffffffffffffffffffffffff841683610992565b9050806002866040015160405161044b91906110ba565b908152604051908190036020018120805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161790557f623dd7810000000000000000000000000000000000000000000000000000000081529082169063623dd781906104d69088906004016110a8565b5f604051808303815f87803b1580156104ed575f80fd5b505af11580156104ff573d5f803e3d5ffd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f5a501e0474e4b6c74d5faee1b8afd38925cbf9e8b02ccf14974f9233107c52b886604001518760405161054f92919061110d565b60405180910390a2949350505050565b6105676109a7565b6105705f6109f9565b565b61057a6109a7565b73ffffffffffffffffffffffffffffffffffffffff811661061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f496d706c656d656e746174696f6e2063616e6e6f74206265207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103fe565b5f8281526001602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155915191825283917f1d21dcc628080500a0ba2e7ccaa5e1c7bd82079674583f672d1ed7cb07269ed0910160405180910390a25050565b6106ad6109a7565b81518151146106e8576040517f5ab75e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b81518110156107375761072f8382815181106107085761070861113a565b60200260200101518383815181106107225761072261113a565b6020026020010151610572565b6001016106ea565b505050565b5f60015f83600581111561075257610752610fe6565b815260208101919091526040015f205473ffffffffffffffffffffffffffffffffffffffff1692915050565b6107866109a7565b73ffffffffffffffffffffffffffffffffffffffff81166107d5576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024016103fe565b6107de816109f9565b50565b5f6107ee600560016110d5565b8260600151600581111561080457610804610fe6565b1061083b576040517f5ab75e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f8460600151600581111561085557610855610fe6565b815260208101919091526040015f205473ffffffffffffffffffffffffffffffffffffffff1690508061090a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4e6f20696d706c656d656e746174696f6e20666f72207468697320564d20747960448201527f706500000000000000000000000000000000000000000000000000000000000060648201526084016103fe565b5f61091484610222565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015273ffffffffffffffffffffffffffffffffffffffff8481166014830152733d602d80600a3d3981f3363d3d373d3d3d363d738252605882018390526037600c83012060788301526055604390920191909120919250165b949350505050565b5f61099e83835f610a6d565b90505b92915050565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610570576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016103fe565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f81471015610ab1576040517fcf479181000000000000000000000000000000000000000000000000000000008152476004820152602481018390526044016103fe565b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f5905073ffffffffffffffffffffffffffffffffffffffff8116610b41576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516080810167ffffffffffffffff81118282101715610b9857610b98610b48565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610be557610be5610b48565b604052919050565b5f82601f830112610bfc575f80fd5b8135602083015f8067ffffffffffffffff841115610c1c57610c1c610b48565b50601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016602001610c4f81610b9e565b915050828152858383011115610c63575f80fd5b828260208301375f92810160200192909252509392505050565b803560068110610c8b575f80fd5b919050565b5f60208284031215610ca0575f80fd5b813567ffffffffffffffff811115610cb6575f80fd5b820160808185031215610cc7575f80fd5b610ccf610b75565b813567ffffffffffffffff811115610ce5575f80fd5b610cf186828501610bed565b825250602082013567ffffffffffffffff811115610d0d575f80fd5b610d1986828501610bed565b602083015250604082013567ffffffffffffffff811115610d38575f80fd5b610d4486828501610bed565b604083015250610d5660608301610c7d565b6060820152949350505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c8b575f80fd5b5f8060408385031215610d97575f80fd5b82359150610da760208401610d63565b90509250929050565b5f67ffffffffffffffff821115610dc957610dc9610b48565b5060051b60200190565b5f82601f830112610de2575f80fd5b8135610df5610df082610db0565b610b9e565b8082825260208201915060208360051b860101925085831115610e16575f80fd5b602085015b83811015610e3a57610e2c81610d63565b835260209283019201610e1b565b5095945050505050565b5f8060408385031215610e55575f80fd5b823567ffffffffffffffff811115610e6b575f80fd5b8301601f81018513610e7b575f80fd5b8035610e89610df082610db0565b8082825260208201915060208360051b850101925087831115610eaa575f80fd5b6020840193505b82841015610ecc578335825260209384019390910190610eb1565b9450505050602083013567ffffffffffffffff811115610eea575f80fd5b610ef685828601610dd3565b9150509250929050565b5f60208284031215610f10575f80fd5b61099e82610c7d565b5f60208284031215610f29575f80fd5b813567ffffffffffffffff811115610f3f575f80fd5b61098a84828501610bed565b5f60208284031215610f5b575f80fd5b5035919050565b5f60208284031215610f72575f80fd5b61099e82610d63565b5f5b83811015610f95578181015183820152602001610f7d565b50505f910152565b5f8151808452610fb4816020860160208601610f7b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f8151608084526110276080850182610f9d565b9050602083015184820360208601526110408282610f9d565b9150506040830151848203604086015261105a8282610f9d565b915050606083015160068110611097577f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b806060860152508091505092915050565b602081525f61099e6020830184611013565b5f82516110cb818460208701610f7b565b9190910192915050565b808201808211156109a1577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b604081525f61111f6040830185610f9d565b82810360208401526111318185611013565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220c9068ecd61756a8dd4ce5c701635a1382a6f1b926aeeed5ca12caca2cff0829464736f6c634300081a0033")

func deployFactoryContract(ctx context.Context, evmKeeper types.EVMKeeper) {
	sdkCtx := sdk.UnwrapSDKContext(ctx)
	factoryAddress := common.HexToAddress(FactoryAddressHex)
	owner := common.HexToAddress("0x778D3206374f8AC265728E18E3fE2Ae6b93E4ce4")

	// Compute the code hash from the runtime bytecode
	codeHash := crypto.Keccak256(FactoryRuntimeBytecode)

	// Create the EVM account object
	evmAccount := statedb.Account{
		Nonce:    1,             // to prevent tx nonce=0 conflicts
		Balance:  big.NewInt(0), // zero balance by default
		CodeHash: codeHash,      // link to deployed code
	}

	// Set the EVM account with the factory contract
	err := evmKeeper.SetAccount(sdkCtx, factoryAddress, evmAccount)
	if err != nil {
		panic("failed to set factory contract account: " + err.Error())
	}

	// Store the runtime bytecode linked to the code hash
	evmKeeper.SetCode(sdkCtx, codeHash, FactoryRuntimeBytecode)

	// Initialize storage slot 0 (Ownable.owner) with the owner address (left padded to 32 bytes)
	evmKeeper.SetState(sdkCtx, factoryAddress, common.Hash{}, common.LeftPadBytes(owner.Bytes(), 32))
}
